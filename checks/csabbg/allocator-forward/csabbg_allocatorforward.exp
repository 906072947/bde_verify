In file included from csabbg_allocatorforward.t.cpp:8:
./csabbg_allocatorforward.t.hpp:38:15: warning: AT02: Class 'allocatorforward_alloc_used' uses allocators but does not have an allocator trait
        class allocatorforward_alloc_used;
              ^
csabbg_allocatorforward.t.cpp:19:19: warning: AT02: Class 'test' uses allocators but does not have an allocator trait
            class test:
                  ^
csabbg_allocatorforward.t.cpp:49:5: warning: MA01: Allocator not passed to base class bde_verify::csabbg::allocatorforward_alloc_used
    allocatorforward_alloc_used(i),
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
csabbg_allocatorforward.t.cpp:50:5: warning: MA02: Allocator not passed to member used0_
    used0_(i),
    ^~~~~~~~~
csabbg_allocatorforward.t.cpp:48:70: warning: MA02: Allocator not passed to member used2_
bde_verify::csabbg::test::test(int i, BloombergLP::bslma::Allocator* alloc):
                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~
csabbg_allocatorforward.t.cpp:74:5: warning: MA02: Allocator not passed to member used0_
    used0_(bde_verify::csabbg::dummy(alloc)),
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
csabbg_allocatorforward.t.cpp:89:20: warning: AT02: Class 'tbase' uses allocators but does not have an allocator trait
            struct tbase
                   ^
csabbg_allocatorforward.t.cpp:134:24: warning: AT02: Class 'M' uses allocators but does not have an allocator trait
                struct M { M(BloombergLP::bslma::Allocator*) {} };
                       ^
csabbg_allocatorforward.t.cpp:140:53: warning: MA02: Allocator not passed to member s
                C(BloombergLP::bslma::Allocator*) : s("") { }
                                                    ^~~~~
csabbg_allocatorforward.t.cpp:138:20: warning: AT02: Class 'C' uses allocators but does not have an allocator trait
            struct C {
                   ^
csabbg_allocatorforward.t.cpp:152:16: warning: AT02: Class 'not_alloc' uses allocators but does not have an allocator trait
        struct not_alloc {
               ^
csabbg_allocatorforward.t.cpp:152:16: warning: AC02: Implicit copy constructor cannot be called with an allocator
csabbg_allocatorforward.t.cpp:291:8: warning: AT02: Class 'alloc_p' uses allocators but does not have an allocator trait
struct alloc_p {
       ^
csabbg_allocatorforward.t.cpp:219:8: warning: AT02: Class 'alloc_d' uses allocators but does not have an allocator trait
struct alloc_d {
       ^
csabbg_allocatorforward.t.cpp:286:8: warning: AT02: Class 'alloc_o' uses allocators but does not have an allocator trait
struct alloc_o {
       ^
csabbg_allocatorforward.t.cpp:92:62: warning: MA02: Allocator not passed to member used0_
                explicit tbase(BloombergLP::bslma::Allocator*);
                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
csabbg_allocatorforward.t.cpp:136:24: warning: AT02: Class 'S' uses allocators but does not have an allocator trait
                struct S { S(const T*) {} S(const T*, const A&) {} };
                       ^
csabbg_allocatorforward.t.cpp:136:28: warning: AC01: This constructor has no version that can be called with an allocator
                struct S { S(const T*) {} S(const T*, const A&) {} };
                           ^
csabbg_allocatorforward.t.cpp:181:22: warning: AM01: Allocator argument initializes non-allocator parameter 1 ('na') of type 'struct bde_verify::csabbg::not_alloc' rather than allocator parameter 2
            object o(a);
                     ^
csabbg_allocatorforward.t.cpp:186:17: warning: AR01: Type using allocator is returned by value
                return o;
                ^
csabbg_allocatorforward.t.cpp:188:17: warning: AR01: Type using allocator is returned by value
                return object(o);
                ^
csabbg_allocatorforward.t.cpp:317:29: warning: GA01: Variable with global storage must be initialized with non-default allocator
bde_verify::csabbg::alloc_a a{};
                            ^
csabbg_allocatorforward.t.cpp:318:29: warning: GA01: Variable with global storage must be initialized with non-default allocator
bde_verify::csabbg::alloc_a b{0};
                            ^
csabbg_allocatorforward.t.cpp:319:29: warning: GA01: Variable with global storage must be initialized with non-default allocator
bde_verify::csabbg::alloc_a c[2];
                            ^
csabbg_allocatorforward.t.cpp:320:29: warning: GA01: Variable with global storage must be initialized with non-default allocator
bde_verify::csabbg::alloc_a d[2][2];
                            ^
25 warnings generated.
